##########################################################################
# env_file for docker or docker compose 
#
# see 
#    - https://docs.docker.com/compose/compose-file/#env_file
# -----------------------------------------------------------------------
# The commented ENV variables below show the default values as example!
##########################################################################

###
# The home directory for the cdm-server process. At this location the cdm-server will 
# create the .cdmLibrary folder which will contain per instance configurations,
# lucene full text index, and other resources
#CDM_HOME=/data

###
# The location of the datasources.xml file to be used by the cdm-server. The datasource.xml file 
# contains the spring bean definitions of the datasources to be loaded by the server.
# NOTE: variable expansion does not work in this file, so the $CDM_HOME can not be used here.
#DATASOURCES=/data/.cdmLibrary/datasources.xml

###
# The numberof cpu cores available on the host machine, this value is 
# being used to configure effective jvm garbage collection
#CPU_CORES=1

###
# Alternative options for the JVM
# You MUST NOT use any of: -Xmx, XX:+UseG1GC -XX:ParallelGCThreads, -XX:ConcGCThreads=, -Duser.home
# since these are managed internally in the container. 
# To set the heap size:
#HEAP_SIZE=1024M
# all other options can be set in (do not put the value in quotes):
#JAVA_OPTIONS=-Dspring.profiles.active=remoting

###
# Alternative arguments for the cdm-server.
# You may only want to use the following options to avoid conflicts with the once managed in the container:
#
# -contextPathPrefix <url path element>   The url path element to use as prefix for all cdm-server instances.
#                                         Per default the instances are running at the server root.
#
# -forceSchemaUpdate                      USE THIS OPTION WITH CARE! Outdated cdm database schema versions will 
#                                         be forcably updated to the version of the cdm-server. This option is only intended to be
#                                         used for development purposes.
#
# -jmx                                    Start the server with the Jetty MBeans in JMX Management mode.
#                                         For testing you can use the following jvm options:
#                                         -Dcom.sun.management.jmxremote.ssl=false
#                                         -Dcom.sun.management.jmxremote.authenticate=false
#                                         -Dcom.sun.management.jmxremote.port=9999
# NOTE: (do not put the value in quotes)
#CDMSERVER_ARGS=-forceSchemaUpdate -jmx
