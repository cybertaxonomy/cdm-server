#!/bin/sh -e
# postrm script for cdmserver
#
# see: dh_installdeb(1)

#
# variables
#
CDM_HOME="/opt/cdmserver"
# CDM_CONFIG_TEMPLATE="/opt/cdmserver/templates/.cdmLibrary"
CDM_LOG="/var/log/cdmserver"

INIT_SCRIPT="cdmserver"
ETC_CDMSERVER="/etc/cdmserver"

CDM_USER=cdm
CDM_GROUP=cdm

CDM_USER_HOME=$CDM_HOME

#
# functions
#
userExist(){
    grep "$1:" /etc/passwd > /dev/null
    [ $? -eq 0 ] && return $TRUE || return $FALSE
}

groupExist(){
    grep "$1:" /etc/group > /dev/null
    [ $? -eq 0 ] && return $TRUE || return $FALSE
}


# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

do_stop_server(){

    echo "prerem: do_stop_server()"

    #stopping the server
    if [ -e /etc/init.d/$INIT_SCRIPT ]
    then
			# the init script is not execurable when doing a reinstall, make sure it is
			chmod 755 /etc/init.d/$INIT_SCRIPT
      echo "stopping server ..."
			# stop server ignoring errors
      /etc/init.d/$INIT_SCRIPT stop || true

			echo "now removing server from rc.d ..."
			update-rc.d -f $INIT_SCRIPT remove
    fi

    return 0
}


case "$1" in
    remove|upgrade|deconfigure)
        do_stop_server
    ;;
    failed-upgrade)
    ;;
    *)
        echo "prerem called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


