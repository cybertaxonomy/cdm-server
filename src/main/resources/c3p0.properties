#
# The CDM-Server instantiates the 3cp0 connection pools on behalf of the cdm-remote-webapp instances and passes 
# the the connection pool per JNDI to the cdm-webapp instances. Thus we need to repeat the configuration as 
# defined in cdmlib-persistence\src\main\resources\c3p0-config.xml
#

## idleConnectionTestPeriod: 
#	 		if this is a number greater than 0, c3p0
#			will test all idle, pooled but unchecked-out connections, every this
#			number of seconds
#c3p0.idleConnectionTestPeriod = 60

# For some applications, high performance is more important than the risk of an 
# occasional database exception. In its default configuration, c3p0 does no 
# Connection testing at all. Setting a fairly long idleConnectionTestPeriod, and 
#  not testing on checkout and check-in at all is an excellent, high-performance 
# approach. 
#

c3p0.idleConnectionTestPeriod = 120
c3p0.testConnectionOnCheckout = false
c3p0.testConnectionOnCheckin = false
c3p0.maxConnectionAge = 600
c3p0.maxIdleTime = 300
c3p0.maxIdleTimeExcessConnections = 200
c3p0.minPoolSize = 1

## automatichoweverTestTable: 
#			If provided, c3p0 will create an
#			empty table of the specified name, and use queries against that table
#			to test the Connection. If automaticTestTable is provided, c3p0 will
#			generate its own test query, therefore any preferredTestQuery set
#			will be ignored. You should not work with the named table after c3p0
#			creates it; it should be strictly for c3p0's use in testing your
#			Connection.
c3p0.automaticTestTable = _c3p0ConnectionTest

# if you do not want c3p0 to register MBeans with your JMX environment, you can suppress JMX support entirely
# for some reason this is required for the cdm-server:
#c3p0.management.ManagementCoordinator=com.mchange.v2.c3p0.management.NullManagementCoordinator