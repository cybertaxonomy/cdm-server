#
# The CDM-Server instantiates the 3cp0 connection pools on behalf of the cdm-remote-webapp 
# instances and passes the the connection pool per JNDI to the cdm-webapp instances. Thus 
# we need to repeat the configuration as defined in 
# cdmlib-persistence\src\main\resources\c3p0-config.xml
#
# For some applications, high performance is more important than the risk of an 
# occasional database exception. In its default configuration, c3p0 does no 
# Connection testing at all. Setting a fairly long idleConnectionTestPeriod, and 
#  not testing on checkout and check-in at all is an excellent, high-performance 
# approach. (from official doc)
#

## idleConnectionTestPeriod: 
#	 		if this is a number greater than 0, c3p0
#			will test all idle, pooled but unchecked-out connections, every this
#			number of seconds.
#           If database restarts will be rare so quick recovery is not an issue, 
#           consider reducing the frequency of tests by idleConnectionTestPeriod 
#           to, say, 300, and see whether clients are troubled by stale or broken 
#           Connections. If not, stick with 300, or try an even bigger number.
#
c3p0.idleConnectionTestPeriod = 600

c3p0.testConnectionOnCheckout = false
c3p0.testConnectionOnCheckin = false

c3p0.minPoolSize = 1
####### timeout parameters
#
# Some general advice about all of these timeout parameters: Slow down! The point
# of Connection pooling is to bear the cost of acquiring a Connection only once, 
# and then to reuse the Connection many, many times. Most databases support Connections 
# that remain open for hours at a time. There's no need to churn through all your 
# Connections every few seconds or minutes. Setting maxConnectionAge or maxIdleTime 
# to 1800 (30 minutes) is quite aggressive. For most databases, several hours may 
# be more appropriate. You can ensure the reliability of your Connections by testing 
# them, rather than by tossing them. (see Configuring Connection Testing.) The only 
# one of these parameters that should generally be set to a few minutes or less is 
# maxIdleTimeExcessConnections. (from official doc)

## maxConnectionAge
#           Seconds, effectively a time to live. A Connection older than 
#           maxConnectionAge will be destroyed and purged from the pool.
# 
# turned off as suggested above 
#c3p0.maxConnectionAge = 600

# maxIdleTime 10800 = 3 hours
c3p0.maxIdleTime = 10800

c3p0.maxIdleTimeExcessConnections = 300

## automaticTestTable: 
#			If provided, c3p0 will create an
#			empty table of the specified name, and use queries against that table
#			to test the Connection. If automaticTestTable is provided, c3p0 will
#			generate its own test query, therefore any preferredTestQuery set
#			will be ignored. You should not work with the named table after c3p0
#			creates it; it should be strictly for c3p0's use in testing your
#			Connection.
c3p0.automaticTestTable = _c3p0ConnectionTest

# if you do not want c3p0 to register MBeans with your JMX environment, you can suppress JMX support entirely
# The ManagementCoordinator was causing problems in the past but seem to be ok now.
#c3p0.management.ManagementCoordinator=com.mchange.v2.c3p0.management.NullManagementCoordinator

# The below settings should only be used to debug connection leaks
# make sure the logging level for com.mchange.v2 is at least at INFO
# see https://dev.e-taxonomy.eu/redmine/projects/edit/wiki/DebugC3P0Connections for details
#c3p0.debugUnreturnedConnectionStackTraces=true
#c3p0.unreturnedConnectionTimeout=30
