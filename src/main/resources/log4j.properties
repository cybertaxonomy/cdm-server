#
#
# If you are having problems with logging you may debug Log4J initialization,
# start the application with a system property log4j.configDebug set to "true".
# E.g.:
#
#     java -Dlog4j.configDebug=true
#

log4j.rootLogger= WARN, FILE

# NOTE:
#   For logging to files see http://www.eclipse.org/jetty/documentation/current/configuring-logging-modules.html 
#

log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender

# Set the name of the file
log4j.appender.FILE.File= /var/log/cdmserver/cdmserver_log.out

# Set the immediate flush to true (default)
log4j.appender.FILE.ImmediateFlush=true

# Set the threshold to debug mode
log4j.appender.FILE.Threshold=debug

# Set the append to true, should not overwrite
log4j.appender.FILE.Append=true

# Set the DatePattern
log4j.appender.FILE.DatePattern='.' yyyy-MM-dd-HH

#
# NOTE 
#   All ConversionPatterns of PatternLayouts will be prefixed by the 
#   eu.etaxonomy.cdm.api.config.LoggingConfigurer with the cdm instance name
#   See also issue #6249 
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d %p [%c] - %m%n

log4j.logger.eu.etaxonomy.cdm.server = INFO

###
# cdm
###
log4j.logger.eu.etaxonomy.cdm = INFO
# 	  avoid vast amount of "getCitation not yet implemented" & "getProblems not yet implemented" messages
log4j.logger.eu.etaxonomy.cdm.model.name.TaxonNameBase = ERROR
log4j.logger.eu.etaxonomy.cdm.persistence.dao.initializer = ERROR
log4j.logger.eu.etaxonomy.cdm.remote.config = INFO
#log4j.logger.eu.etaxonomy.cdm.remote.json.processor.AbstractCdmBeanProcessor  = DEBUG
log4j.logger.eu.etaxonomy.cdm.remote.controller = INFO
log4j.logger.eu.etaxonomy.cdm.remote.controller.interceptor = WARN
#     prevent CdmExceptionResolver from logging errors
log4j.logger.eu.etaxonomy.cdm.remote.exception.CdmExceptionResolver = ERROR

log4j.logger.eu.etaxonomy.cdm.server = INFO

###
# springframework
###
log4j.logger.org.springframework = WARN
log4j.logger.org.springframework.web.servlet.DispatcherServlet = WARN
log4j.logger.org.springframework.web.servlet.mvc.annotation = WARN
#log4j.category.org.springframework.web.servlet.mvc.support=DEBUG, FILE
log4j.logger.org.springframework.web.servlet.view = WARN

###
# json-lib
###
log4j.logger.net.sf.json.JSONObject = ERROR

###
# Hibernate
###
log4j.logger.org.hibernate=WARN
#     log just the SQL
log4j.logger.org.hibernate.SQL=WARN
log4j.logger.org.hibernate.search = ERROR
#     log JDBC bind parameters
log4j.logger.org.hibernate.type=WARN
#     log schema export/update
log4j.logger.org.hibernate.tool.hbm2ddl=WARN
# This overcomes the proxy narrow log of hibernate
log4j.logger.org.hibernate.engine.StatefulPersistenceContext.ProxyWarnLog=ERROR
log4j.logger.com.mchange.v2.c3p0=WARN

# supress HHH90000003
log4j.logger.org.hibernate.orm.deprecation=ERROR


###
# jetty
###
# !!! jetty currently does not work with log4j
#     need to implement log4j implementation of org.eclipse.jetty.util.log.Logger ?
#log4j.logger.org.eclipse.jetty.server=INFO
